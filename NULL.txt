NULL values pop up when the data is unknown or inappropriate.
IS NULL or IS NOT NULL is allowed

LEFT JOIN returns all rows from the left table, even if there are no matches in the right
RIGHT JOIN returns all the rows for the right table
INNER JOIN selects records that have matching values in both tables

1.
List the teachers who have NULL for their department

SELECT name
    FROM teacher
   WHERE dept IS NULL

2.
INNER JOIN misses the teachers with no department and the departments with no teacher

SELECT teacher.name, dept.name
    FROM teacher INNER JOIN dept
        ON (teacher.dept=dept.id)

3.
Use a different join so that all teachers are listed

SELECT teacher.name, dept.name
    FROM teacher LEFT JOIN dept
        ON (teacher.dept=dept.id)

4.
Use a different JOIN so that all departments are listed

SELECT teacher.name, dept.name
    FROM teacher RIGHT JOIN dept
        ON (teacher.dept=dept.id)

5.
USE COALESCE to print the mobile number. Use the number '07986 444 2266' if there is no number given.
Show the teacher name and mobile number or the default number

SELECT name, COALESCE(mobile, '07986 444 2266')
    FROM teacher


!COALESCE takes any number of arguments and returns the first value that is not null. In other words mobile will be
the given record until null then the default number is given!
!COALESCE(x,y,z) = x if x is not NULL
                 = y if x is NULL and y is not NULL
                 = NULL if x and y and z are all NULL!

6.
Use the COALESCE function and a LEFT JOIN to print the teacher name and department name. Use the string 'None' when
there is no department

SELECT teacher.name, COALESCE(dept.name, 'None')
    FROM teacher
   LEFT JOIN dept ON (teacher.dept=dept.id)

7.
Use COUNT to show the number of teachers and the mobile phone numbers

SELECT COUNT(name), COUNT(mobile)
    FROM teacher

8.
Use COUNT and GROUP BY dept.name to show each department and the number of staff. Use a RIGHT JOIN to ensure that
the engineering department is listed

SELECT dept.name, COUNT(teacher.name)
    FROM teacher
   RIGHT JOIN dept ON (teacher.dept=dept.id)
   GROUP BY dept.name

9.
Use CASE to show the name of teacher teacher followed by 'Sci' if the teacher is in dept 1 or 2 and 'Art' otherwise

SELECT teacher.name,
CASE WHEN dept.id = 1 THEN 'Sci'
     WHEN dept.id = 2 THEN 'Sci'
     ELSE 'Art' END
FROM teacher LEFT JOIN dept ON (teacher.dept=dept.id)

10.
Use CASE to show the name of each teacher followed by 'Sci' if the teacher is in dept 1 or dept 2, show 'Art' if
the teacher's dept is 3 and 'None' otherwise.

SELECT teacher.name,
CASE WHEN dept.id = 1 THEN 'Sci'
     WHEN dept.id = 2 THEN 'Sci'
     WHEN dept.id = 3 THEN 'Art'
     ELSE 'None' END
FROM teacher LEFT JOIN dept ON (teacher.dept=dept.id)